plugins {
    id 'com.android.application'
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.pdt.app"
        minSdk 21
        targetSdk 29
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    signingConfigs {
        debug {
            storeFile file('../keystores/goodfarmer_key.jks')
            storePassword 'Pdt1794@'
            keyAlias 'goodfarmer.app'
            keyPassword 'Pdt1794@'
        }
        release {
            storeFile file('../keystores/goodfarmer_key.jks')
            storePassword 'Pdt1794@'
            keyAlias 'goodfarmer.app'
            keyPassword 'Pdt1794@'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

//task "copyDebugDex"(type: Copy) {
//    outputs.upToDateWhen { false }  // do not UP-TO_DATE
//    dependsOn("assembleRelease")
//    from "$buildDir/intermediates/dex/debug/mergeDexDebug/classes.dex"
//    rename "(.*).dex", "classes.dex"
//    into "$rootProject.projectDir/builder/src/main/assets/dex/sandhook"
//}

task "copyDebugSo"(type: Copy) {
    outputs.upToDateWhen { false }  // do not UP-TO_DATE
    dependsOn("assembleRelease")
    from "$buildDir/intermediates/merged_native_libs/release/out/lib"
    rename '(.*).so', '$1'
    into "$rootProject.projectDir/builder/src/main/assets/lib"
}

task "copyReleaseApk"(type: Copy) {
    outputs.upToDateWhen { false }  // do not UP-TO_DATE
    dependsOn("assembleRelease")
    from "$buildDir/outputs/apk/release/app-release.apk"
    rename "(.*).apk", "grub_plugin.apk"
    into "$rootProject.projectDir/builder/src/main/assets/apk"
}

task "copyLoaderFiles"() {
    outputs.upToDateWhen { false }
    dependsOn("copyDebugSo")
//    dependsOn("copyDebugDex")
    dependsOn("copyReleaseApk")
}

dependencies {
    implementation project(':core')
}